{"version":3,"sources":["auth/AuthContext.js","types/types.js","auth/authReducer.js","components/login/LoginScreen.js","data/heroes.js","components/heroes/HeroCard.js","components/heroes/HeroList.js","selectors/getHeroesByPublisher.js","components/dc/DcScreen.js","components/heroes/HeroScreen.js","selectors/getHeroById.js","components/marvel/MarvelScreen.js","components/hooks/useForm.js","components/search/SearchScreen.js","selectors/getHeroesByName.js","components/ui/Navbar.js","routers/DashboardRoutes.js","routers/PrivateRoute.js","routers/PublicRoute.js","routers/AppRouter.js","HeroesApp.jsx","index.js"],"names":["AuthContext","createContext","types","authReducer","state","action","type","payload","logged","LoginScreen","history","dispatch","useContext","className","onClick","lastPath","localStorage","getItem","name","replace","heroes","id","superhero","publisher","alter_ego","first_appearance","characters","HeroCard","style","maxWidth","src","alt","to","HeroList","heroesMemorized","useMemo","includes","Error","filter","hero","getHeroesByPublisher","map","DcScreen","HeroScreen","heroeId","useParams","heroMemorized","find","length","push","goBack","MarvelScreen","useForm","initialState","useState","values","setValues","reset","handleInputChange","target","value","SearchScreen","location","useLocation","queryString","parse","search","q","searchText","formValues","heroesFiltered","toLocaleLowerCase","getHeroesByName","onSubmit","event","preventDefault","autoComplete","onChange","placeholder","Navbar","user","useHistory","activeClassName","exact","DashboardRoutes","path","component","PrivateRoute","isAuthenticated","Component","rest","setItem","pathname","props","PublicRoute","AppRouter","HeroesApp","useReducer","JSON","useEffect","stringify","Provider","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.371fe462.chunk.js","sourcesContent":["import { createContext } from \"react\";\n\nexport const AuthContext = createContext();","//los types van a ser los tipos para las acciones\nexport const types = {\n   \n   login: '[auth] login',\n   logout:'[auth] logout'\n   \n}","import { types } from \"../types/types\";\n\n//un reducer no es mÃ¡s que una funcion pura\n//crearemos un estado similar a esto\n/* const state = {\n   name: \"Elba\",\n   logged: true\n} */\n\nexport const authReducer = (state = {}, action) => {\n\n   switch (action?.type) {\n    case types.login:\n      return {\n         ...action.payload,\n         logged : true\n      };\n      case types.logout:\n         //si es logout no nos interesa para nada el payload\n         return {\n            logged :false\n         }\n    default:\n      return state;\n  }\n};\n","import React, { useContext } from \"react\";\r\nimport { AuthContext } from \"../../auth/AuthContext\";\r\nimport { types } from \"../../types/types\";\r\n\r\nexport const LoginScreen = ({ history }) => {\r\n  \r\n  //1-Obtener la referencia al contexto mediante el hook useContext(HOC)\r\n  const context = useContext(AuthContext);\r\n  //2-Extraemos lo que necesitemos\r\n  const { dispatch } = context;\r\n\r\n   const handleLogin = () => {\r\n\r\n    const lastPath = localStorage.getItem('lastPath') || '/';\r\n      // history.push(\"/\")\r\n      //TAREA: Debemos extraer del context la funcion dispatch y mandar un\r\n      // objeto muy sencillo { name:'Fernando' }\r\n      dispatch({\r\n        type:types.login,\r\n        payload:{name:'Oscar'}\r\n      })\r\n      history.replace( lastPath )\r\n      \r\n   }\r\n   \r\n  return (\r\n    <div className=\"container mt-5\">\r\n      <h1>Login</h1>\r\n      <hr />\r\n\r\n      <button \r\n      className=\"btn btn-primary\"\r\n      onClick={ handleLogin }\r\n      >\r\n            Login\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n","export const heroes = [\n  {\n    id: \"dc-batman\",\n    superhero: \"Batman\",\n    publisher: \"DC Comics\",\n    alter_ego: \"Bruce Wayne\",\n    first_appearance: \"Detective Comics #27\",\n    characters: \"Bruce Wayne\",\n  },\n  {\n    id: \"dc-superman\",\n    superhero: \"Superman\",\n    publisher: \"DC Comics\",\n    alter_ego: \"Kal-El\",\n    first_appearance: \"Action Comics #1\",\n    characters: \"Kal-El\",\n  },\n  {\n    id: \"dc-flash\",\n    superhero: \"Flash\",\n    publisher: \"DC Comics\",\n    alter_ego: \"Jay Garrick\",\n    first_appearance: \"Flash Comics #1\",\n    characters: \"Jay Garrick, Barry Allen, Wally West, Bart Allen\",\n  },\n  {\n    id: \"dc-green\",\n    superhero: \"Green Lantern\",\n    publisher: \"DC Comics\",\n    alter_ego: \"Alan Scott\",\n    first_appearance: \"All-American Comics #16\",\n    characters:\n      \"Alan Scott, Hal Jordan, Guy Gardner, John Stewart, Kyle Raynor, Jade, Sinestro, Simon Baz\",\n  },\n  {\n    id: \"dc-arrow\",\n    superhero: \"Green Arrow\",\n    publisher: \"DC Comics\",\n    alter_ego: \"Oliver Queen\",\n    first_appearance: \"More Fun Comics #73\",\n    characters: \"Oliver Queen\",\n  },\n  {\n    id: \"dc-wonder\",\n    superhero: \"Wonder Woman\",\n    publisher: \"DC Comics\",\n    alter_ego: \"Princess Diana\",\n    first_appearance: \"All Star Comics #8\",\n    characters: \"Princess Diana\",\n  },\n  {\n    id: \"dc-martian\",\n    superhero: \"Martian Manhunter\",\n    publisher: \"DC Comics\",\n    alter_ego: \"J'onn J'onzz\",\n    first_appearance: \"Detective Comics #225\",\n    characters: \"Martian Manhunter\",\n  },\n  {\n    id: \"dc-robin\",\n    superhero: \"Robin/Nightwing\",\n    publisher: \"DC Comics\",\n    alter_ego: \"Dick Grayson\",\n    first_appearance: \"Detective Comics #38\",\n    characters: \"Dick Grayson\",\n  },\n  {\n    id: \"dc-blue\",\n    superhero: \"Blue Beetle\",\n    publisher: \"DC Comics\",\n    alter_ego: \"Dan Garret\",\n    first_appearance: \"Mystery Men Comics #1\",\n    characters: \"Dan Garret, Ted Kord, Jaime Reyes\",\n  },\n  {\n    id: \"dc-black\",\n    superhero: \"Black Canary\",\n    publisher: \"DC Comics\",\n    alter_ego: \"Dinah Drake\",\n    first_appearance: \"Flash Comics #86\",\n    characters: \"Dinah Drake, Dinah Lance\",\n  },\n  {\n    id: \"marvel-spider\",\n    superhero: \"Spider Man\",\n    publisher: \"Marvel Comics\",\n    alter_ego: \"Peter Parker\",\n    first_appearance: \"Amazing Fantasy #15\",\n    characters: \"Peter Parker\",\n  },\n  {\n    id: \"marvel-captain\",\n    superhero: \"Captain America\",\n    publisher: \"Marvel Comics\",\n    alter_ego: \"Steve Rogers\",\n    first_appearance: \"Captain America Comics #1\",\n    characters: \"Steve Rogers\",\n  },\n  {\n    id: \"marvel-iron\",\n    superhero: \"Iron Man\",\n    publisher: \"Marvel Comics\",\n    alter_ego: \"Tony Stark\",\n    first_appearance: \"Tales of Suspense #39\",\n    characters: \"Tony Stark\",\n  },\n  {\n    id: \"marvel-thor\",\n    superhero: \"Thor\",\n    publisher: \"Marvel Comics\",\n    alter_ego: \"Thor Odinson\",\n    first_appearance: \"Journey into Myster #83\",\n    characters: \"Thor Odinson\",\n  },\n  {\n    id: \"marvel-hulk\",\n    superhero: \"Hulk\",\n    publisher: \"Marvel Comics\",\n    alter_ego: \"Bruce Banner\",\n    first_appearance: \"The Incredible Hulk #1\",\n    characters: \"Bruce Banner\",\n  },\n  {\n    id: \"marvel-wolverine\",\n    superhero: \"Wolverine\",\n    publisher: \"Marvel Comics\",\n    alter_ego: \"James Howlett\",\n    first_appearance: \"The Incredible Hulk #180\",\n    characters: \"James Howlett\",\n  },\n  {\n    id: \"marvel-daredevil\",\n    superhero: \"Daredevil\",\n    publisher: \"Marvel Comics\",\n    alter_ego: \"Matthew Michael Murdock\",\n    first_appearance: \"Daredevil #1\",\n    characters: \"Matthew Michael Murdock\",\n  },\n  {\n    id: \"marvel-hawkeye\",\n    superhero: \"Hawkeye\",\n    publisher: \"Marvel Comics\",\n    alter_ego: \"Clinton Francis Barton\",\n    first_appearance: \"Tales of Suspense #57\",\n    characters: \"Clinton Francis Barton\",\n  },\n  {\n    id: \"marvel-cyclops\",\n    superhero: \"Cyclops\",\n    publisher: \"Marvel Comics\",\n    alter_ego: \"Scott Summers\",\n    first_appearance: \"X-Men #1\",\n    characters: \"Scott Summers\",\n  },\n  {\n    id: \"marvel-silver\",\n    superhero: \"Silver Surfer\",\n    publisher: \"Marvel Comics\",\n    alter_ego: \"Norrin Radd\",\n    first_appearance: \"The Fantastic Four #48\",\n    characters: \"Norrin Radd\",\n  },\n];\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nexport const HeroCard = ({\n  id,\n  superhero,\n  alter_ego,\n  first_appearance,\n  characters,\n}) => {\n  return (\n    <div className=\"card ms-3\" style={{ maxWidth: 540 }}>\n      <div className=\"row no-gutters\">\n        <div className=\"col-md-4\">\n          <img\n            src={`./assets/heroes/heroes/${id}.jpg`}\n            className=\"card-img\"\n            alt={superhero}\n          />\n        </div>\n        <div className=\"col-md-8\">\n          <div className=\"card-body\">\n            <h5 className=\"card-title\">{superhero}</h5>\n            <p className=\"card-text\">{alter_ego}</p>\n            {\n              (alter_ego !== characters) && \n              <p className=\"card-text\">{ characters }</p>\n            }\n            <p className=\"card-text\">\n              <small className=\"text-muted\">{first_appearance}</small>\n            </p>\n\n            <Link to={`./hero/${ id }`}>Mas...</Link>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React, { useMemo } from 'react'\nimport { getHeroesByPublisher } from '../../selectors/getHeroesByPublisher'\nimport { HeroCard } from './HeroCard';\n\n//publisher va a ser la editorial sol hay dos marvel y DC\nexport const HeroList = ({publisher}) => {\n//vamos a usar useMemo para mayor eficiencia,pues si el publisher no cambia esta funcion no deberia ejecutarse y lo harÃ¡ si cambian las props,el state,etc...\n  const heroesMemorized = useMemo(() => \n  getHeroesByPublisher(publisher),[publisher]);\n  \n  \n  //const heroes = getHeroesByPublisher(publisher);\n\n  return (\n    <div className=\"card-columns animate__animated animate__fadeInDown \">\n      {\n        heroesMemorized.map( hero => (\n          <HeroCard key={ hero.id } {...hero}> \n        </HeroCard>\n        ))\n      }\n    </div>\n  )\n}\n","import { heroes } from '../data/heroes'\n\nexport const getHeroesByPublisher = (publisher) => {\n  \n  const validPublishers = ['DC Comics', 'Marvel Comics'];\n  \n  if ( !validPublishers.includes(publisher) ){\n    throw new Error(`Publisher ${publisher} no es correcto`)\n  }\n\n  return heroes.filter( hero => hero.publisher === publisher );\n  \n}\n  ","import React from 'react'\r\nimport { HeroList } from '../heroes/HeroList'\r\n\r\nexport const DcScreen = () => {\r\n\r\n   return (\r\n      <div className=\"container-fluid mt-2\">\r\n         <h1>DCScreen</h1>\r\n        <HeroList publisher=\"DC Comics\" />\r\n      </div>\r\n   )\r\n}\r\n","import React, { useMemo } from \"react\";\r\nimport { Redirect, useParams } from \"react-router-dom\";\r\nimport { getHeroById } from \"../../selectors/getHeroById\";\r\n\r\nexport const HeroScreen = ({ history }) => {\r\n  \r\n  const { heroeId } = useParams();\r\n  \r\n  const heroMemorized = useMemo(() => getHeroById(heroeId), [heroeId]);\r\n  //const hero = getHeroById(heroeId);\r\n  \r\n\r\n  if (!heroMemorized) {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n\r\n  const handleReturn = () => {\r\n    if (history.length <= 2) (heroeId.includes('marvel')) ? history.push(\"/marvel\") : history.push(\"/dc\")\r\n    else  history.goBack();\r\n  };\r\n\r\n  // console.log(heroMemorized)\r\n  const {\r\n    superhero,\r\n    publisher,\r\n    alter_ego,\r\n    first_appearance,\r\n    characters,\r\n  } = heroMemorized;\r\n\r\n  return (\r\n    <div className=\"row mt-5 \">\r\n      <div className=\"col-4\">\r\n        <img\r\n          src={`./assets/heroes/heroes/${heroeId}.jpg`}\r\n          alt={superhero}\r\n          className=\"img-thumbnail animate__animated animate__bounceInRight\"\r\n        />\r\n      </div>\r\n      <div className=\"col-8\">\r\n        <h3> {superhero} </h3>\r\n\r\n        <ul className=\"list-group list-group-flush\">\r\n          <li className=\"list-group-item\">\r\n            <b>Alter ego: </b>\r\n            {alter_ego}\r\n          </li>\r\n          <li className=\"list-group-item\">\r\n            <b>Publisher: </b>\r\n            {publisher}\r\n          </li>\r\n          <li className=\"list-group-item\">\r\n            <b>First Appearance: </b> {first_appearance}\r\n          </li>\r\n        </ul>\r\n        <h5>Characters </h5>\r\n        <p>{characters}</p>\r\n\r\n        <button className=\"btn btn-outline-info\" onClick={handleReturn}>\r\n          Return\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import { heroes } from '../data/heroes'\n\nexport const getHeroById = ( id ) => {\n  \n  \n  return heroes.find( hero => hero.id === id);\n\n}\n\n","import React from 'react'\r\nimport { HeroList } from '../heroes/HeroList'\r\n\r\nexport const MarvelScreen = () => {\r\n   return (\r\n      <div className=\"container-fluid mt-2\">\r\n         <h1>MarvelScreen</h1>\r\n         <HeroList publisher=\"Marvel Comics\" />\r\n      </div>\r\n   )\r\n}\r\n","import { useState } from \"react\";\n\nexport const useForm = ( initialState = {}) => {\n\n   const [values, setValues] = useState(initialState);\n\n   const reset = () => {\n      setValues( initialState )\n   }\n\n   const handleInputChange = ({target}) => {\n\n      setValues({\n         ...values,\n         [target.name]:target.value\n      })\n   }\n\n   return [ values, handleInputChange, reset]\n\n\n}\n\nexport default useForm;","import { useLocation } from \"react-router-dom\";\n// import { heroes } from \"../../data/heroes\";\nimport { HeroCard } from \"../heroes/HeroCard\";\nimport useForm from \"../hooks/useForm\";\nimport queryString from \"query-string\";\nimport { getHeroesByName } from \"../../selectors/getHeroesByName\";\nimport { useMemo } from \"react\";\n\nexport const SearchScreen = ({ history }) => {\n  //Tarea1 Agregar este comnponente a la navbar y que podamos navegar a Ã©l\n\n  const location = useLocation();\n  const { q = \"\" } = queryString.parse(location.search);\n\n  const initialHero = {\n    searchText: q,\n  };\n  const [formValues, handleInputChange] = useForm(initialHero);\n\n  const { searchText } = formValues;\n\n  const heroesFiltered = useMemo(() => getHeroesByName(q), [q]);\n\n  const handleSearch = (event) => {\n    event.preventDefault();\n    history.push(`?q=${searchText}`);\n  };\n\n  return (\n    <div className=\"container-fluid mt-2\">\n      <h1>SearchScreen</h1>\n      <hr />\n\n      <div className=\"row\">\n        <div className=\"col-5\">\n          <h4>Search Form</h4>\n          <form onSubmit={handleSearch}>\n            <input\n              type=\"text\"\n              name=\"searchText\"\n              autoComplete=\"off\"\n              onChange={handleInputChange}\n              placeholder=\"Find yor hero\"\n              value={searchText}\n              className=\"form-control\"\n            />\n            <button\n              type=\"submit\"\n              className=\"btn mt-1 btn-block btn-outline-primary\"\n            >\n              Search...\n            </button>\n          </form>\n        </div>\n        <div className=\"col-7\">\n          <h4>Results</h4>\n          <hr />\n\n          {( q === \"\" )&& (\n            <div className=\"alert alert-info\">Search for a hero</div>\n          )}\n\n         {( q !== \"\" && (heroesFiltered.length === 0)) && (\n            <div className=\"alert alert-danger\">No Hero Found for {q}</div>\n          )}\n\n          {heroesFiltered.map((hero) => (\n            <HeroCard key={hero.id} {...hero}></HeroCard>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n","import { heroes } from '../data/heroes';\n\nexport const getHeroesByName = ( name = '') => {\n\n   if (name === '') {\n      return [];\n   }\n\n   name = name.toLocaleLowerCase();\n   return heroes.filter(\n       hero => hero.superhero.toLocaleLowerCase().includes(name))\n}\n","import React, { useContext } from 'react';\r\nimport { Link, NavLink, useHistory } from 'react-router-dom';\r\nimport { AuthContext } from '../../auth/AuthContext';\r\nimport { types } from '../../types/types';\r\nimport './../../index.css';\r\n\r\nexport const Navbar = ( ) => {\r\n\r\n    const { user,dispatch } = useContext(AuthContext);\r\n    const history = useHistory()\r\n\r\n    //Tarea1 : hacer el dispatch y redireccionar a la pag de login\r\n    const handleLogout = () =>  {\r\n\r\n        dispatch({\r\n            type:types.logout\r\n        })\r\n        history.replace(\"/login\")\r\n\r\n    }\r\n\r\n    return (\r\n        <nav id=\"barra\" className=\"navbar navbar-expand-sm navbar-dark bg-secondary\">\r\n            <Link \r\n                className=\"navbar-brand\" \r\n                to=\"/\"\r\n            >\r\n                Asociaciones\r\n            </Link>\r\n\r\n            <div className=\"navbar-collapse\">\r\n                <div className=\"navbar-nav\">\r\n\r\n                    <NavLink \r\n                        activeClassName=\"active\"\r\n                        className=\"nav-item nav-link\" \r\n                        exact\r\n                        to=\"/marvel\"\r\n                    >\r\n                        Marvel\r\n                    </NavLink>\r\n\r\n                    <NavLink \r\n                        activeClassName=\"active\"\r\n                        className=\"nav-item nav-link\" \r\n                        exact\r\n                        to=\"/dc\"\r\n                    >\r\n                        DC\r\n                    </NavLink>\r\n                   \r\n                    <NavLink\r\n                    activeClassName=\"active\"\r\n                    className=\"nav-item nav-link\"\r\n                    exact\r\n                    to=\"/search\">\r\n                        Search\r\n\r\n                    </NavLink>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"navbar-collapse collapse w-100 order-3 dual-collapse2\">\r\n                <ul className=\"navbar-nav ml-auto\">\r\n                    <span className=\"nav-item nav-link text-info py-3\"\r\n                    >{ user.name }</span>\r\n                    <button \r\n                        className=\"nav-item nav-link btn\"\r\n                        onClick= { handleLogout } \r\n                    >\r\n                        Logout\r\n                    </button>\r\n                </ul>\r\n            </div>\r\n        </nav>\r\n    )\r\n}","import React from \"react\";\r\nimport { Redirect, Route, Switch } from \"react-router-dom\";\r\nimport { DcScreen } from \"../components/dc/DcScreen\";\r\nimport { HeroScreen } from \"../components/heroes/HeroScreen\";\r\nimport { MarvelScreen } from \"../components/marvel/MarvelScreen\";\r\nimport { SearchScreen } from \"../components/search/SearchScreen\";\r\nimport { Navbar } from \"../components/ui/Navbar\";\r\n\r\nexport const DashboardRoutes = ( ) => {\r\n  return (\r\n    <>\r\n      <Navbar />\r\n      <div>\r\n        <Switch>\r\n          <Route exact path=\"/marvel\" component={MarvelScreen} />\r\n          <Route exact path=\"/hero/:heroeId\" component={HeroScreen} />\r\n          <Route exact path=\"/dc\" component ={ DcScreen } />\r\n          <Route exact path=\"/search\" component ={ SearchScreen } />\r\n          \r\n          <Redirect to=\"/marvel\" />\r\n        </Switch>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\nimport { Redirect, Route } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\n\nexport const PrivateRoute = ({\n  isAuthenticated,\n  component: Component,\n  ...rest\n}) => {\n\n   // console.log(rest,'rest')\n   localStorage.setItem('lastPath',rest.location.pathname)\n  return (\n    <Route\n      {...rest}\n      component={ ( props ) =>\n        isAuthenticated \n        ? < Component {...props} /> \n        : < Redirect to= \"/login\" />\n      }\n    />\n  );\n};\n\nPrivateRoute.propTypes = {\n   isAuthenticated: PropTypes.bool.isRequired,\n   component : PropTypes.func.isRequired\n}","import React from \"react\";\nimport { Redirect, Route } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\n\nexport const PublicRoute = ({\n  isAuthenticated,\n  component: Component,\n  ...rest\n}) => {\n  return (\n    <Route\n      {...rest}\n      component={(props) =>\n        !isAuthenticated \n        ? <Component {...props} /> \n        : <Redirect to=\"/\" />\n      }\n    />\n  );\n};\n\nPublicRoute.propTypes = {\n   isAuthenticated: PropTypes.bool.isRequired,\n   component : PropTypes.func.isRequired\n}","import React, { useContext } from \"react\";\r\nimport { HashRouter as Router, Switch } from \"react-router-dom\";\r\nimport { AuthContext } from \"../auth/AuthContext\";\r\nimport { LoginScreen } from \"../components/login/LoginScreen\";\r\n// import { Navbar } from \"../components/ui/Navbar\";\r\nimport { DashboardRoutes } from \"./DashboardRoutes\";\r\nimport { PrivateRoute } from \"./PrivateRoute\";\r\nimport { PublicRoute } from \"./PublicRoute\";\r\n\r\nexport const AppRouter = () => {\r\n\r\n  const { user } = useContext(AuthContext)\r\n  return (\r\n    <Router>\r\n      <div>\r\n        {/* <Navbar /> */}\r\n        <Switch>\r\n          \r\n          {/* <Route exact path=\"/login\" component={ LoginScreen } /> */}\r\n          <PublicRoute exact path=\"/login\" component={ LoginScreen } \r\n          isAuthenticated={user.logged}/>\r\n\r\n          {/* <Route path=\"/\" component={ DashboardRoutes } /> */}\r\n          <PrivateRoute path=\"/\" component={ DashboardRoutes } \r\n          isAuthenticated={user.logged}/>\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n};\r\n","import React, { useEffect, useReducer } from 'react'\r\nimport { AuthContext } from './auth/AuthContext'\r\nimport { authReducer } from './auth/authReducer'\r\nimport { AppRouter } from './routers/AppRouter'\r\n\r\nexport const HeroesApp = () => {\r\n\r\n  const init = () => {\r\n    //parseamos a Object la salida del localStorage\r\n    return JSON.parse(localStorage.getItem('user')) || {\r\n      //si no hay nada simplemente retornamos logged a false\r\n      logged:false\r\n    }\r\n  }\r\n\r\n  const [user, dispatch] = useReducer(authReducer, {}, init);\r\n\r\n  //Tarea :implementar un efecto que grabe en el localStorage el user si el usuario cambia\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('user',JSON.stringify(user))\r\n  }, [user])\r\n\r\n   return (\r\n     <AuthContext.Provider value={{ user,dispatch }}>\r\n       <AppRouter />\r\n     </AuthContext.Provider>\r\n   )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HeroesApp } from './HeroesApp';\nimport './index.css'\n\nReactDOM.render(\n  <>\n    <HeroesApp />\n  </>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}